# We set the language to c because python isn't supported on the MacOS X nodes
# on Travis. However, the language ends up being irrelevant anyway, since we
# install Python ourselves using conda.
language: c

os:
    - linux

env:
    global:
        # Set defaults to avoid repeating in most cases
        - NUMPY_VERSION=1.9
        - OPTIONAL_DEPS=false
        - MAIN_CMD='python setup.py'
    matrix:
        - PYTHON_VERSION=2.6 SETUP_CMD='egg_info'
        - PYTHON_VERSION=2.7 SETUP_CMD='egg_info'
        - PYTHON_VERSION=3.3 SETUP_CMD='egg_info'
        - PYTHON_VERSION=3.4 SETUP_CMD='egg_info'

matrix:
    include:

        # Try MacOS X
        - os: osx
          env: PYTHON_VERSION=2.7 SETUP_CMD='test' OPTIONAL_DEPS=true

        # Check for sphinx doc build warnings - we do this first because it
        # runs for a long time
        - os: linux
          env: PYTHON_VERSION=2.7 SETUP_CMD='build_sphinx -w'  OPTIONAL_DEPS=true
          # OPTIONAL_DEPS needed because the plot_directive in sphinx needs them

        # Try all python versions with the latest numpy
        - os: linux
          env: PYTHON_VERSION=2.6 SETUP_CMD='test --open-files'
        - os: linux
          env: PYTHON_VERSION=2.7 SETUP_CMD='test --open-files'
        - os: linux
          env: PYTHON_VERSION=3.3 SETUP_CMD='test --open-files'
        - os: linux
          env: PYTHON_VERSION=3.4 SETUP_CMD='test --open-files'

        # Now try with all optional dependencies on 2.7 and an appropriate 3.x
        # build (with latest numpy). We also note the code coverage on Python
        # 2.7.
        - os: linux
          env: PYTHON_VERSION=2.7 SETUP_CMD='test --coverage' OPTIONAL_DEPS=true LC_CTYPE=C.ascii LC_ALL=C.ascii
        - os: linux
          env: PYTHON_VERSION=3.4 SETUP_CMD='test' OPTIONAL_DEPS=true LC_CTYPE=C.ascii LC_ALL=C.ascii

        # Try older numpy versions
        - os: linux
          env: PYTHON_VERSION=2.7 NUMPY_VERSION=1.8 SETUP_CMD='test'
        - os: linux
          env: PYTHON_VERSION=2.7 NUMPY_VERSION=1.7 SETUP_CMD='test'
        - os: linux
          env: PYTHON_VERSION=2.7 NUMPY_VERSION=1.6 SETUP_CMD='test'

        # Do a PEP8 test
        - os: linux
          env: PYTHON_VERSION=2.7 MAIN_CMD='pep8 astropy --count' SETUP_CMD=''

before_install:

    # Install conda
    - source continuous-integration/travis/install_conda_$TRAVIS_OS_NAME.sh

    # DOCUMENTATION DEPENDENCIES
    - if [[ $SETUP_CMD == build_sphinx* ]]; then source continuous-integration/travis/install_deps_$TRAVIS_OS_NAME.sh; fi

install:

    # CONDA
    - conda create --yes -n test -c astropy-ci-extras python=$PYTHON_VERSION pip
    - source activate test

    - export CONDA_INSTALL="conda install -c astropy-ci-extras --yes python=$PYTHON_VERSION numpy=$NUMPY_VERSION"

    # CORE DEPENDENCIES
    - if [[ $SETUP_CMD == test* || $SETUP_CMD == build_sphinx* ]]; then $CONDA_INSTALL pytest Cython jinja2 psutil; fi

    # OPTIONAL DEPENDENCIES
    - if $OPTIONAL_DEPS; then $CONDA_INSTALL scipy h5py matplotlib pyyaml; fi
    - if $OPTIONAL_DEPS; then pip install beautifulsoup4; fi

    # DOCUMENTATION DEPENDENCIES
    # build_sphinx needs sphinx and matplotlib (for plot_directive). Note that
    # this matplotlib will *not* work with py 3.x, but our sphinx build is
    # currently 2.7, so that's fine
    - if [[ $SETUP_CMD == build_sphinx* ]]; then $CONDA_INSTALL Sphinx=1.2.2 Pygments matplotlib; fi

    # COVERAGE DEPENDENCIES
    - if [[ $SETUP_CMD == 'test --coverage' ]]; then pip install coverage coveralls; fi

    # PEP8 DEPENDENCIES
    - if [[ $MAIN_CMD == pep8* ]]; then pip install pep8; fi

script:
    - $MAIN_CMD $SETUP_CMD

after_success:
    - if [[ $SETUP_CMD == 'test --coverage' ]]; then coveralls --rcfile='astropy/tests/coveragerc'; fi
